<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://zengyongxing.github.io/</id><title>zengyongxing's</title><subtitle>zengyongxing's programming notes and thoughts.</subtitle> <updated>2021-09-29T14:27:50+08:00</updated> <author> <name>zengyongxing</name> <uri>https://zengyongxing.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://zengyongxing.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://zengyongxing.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 zengyongxing </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Flexbox V.s. Cssgrid</title><link href="https://zengyongxing.github.io/posts/flexbox-v.s.-cssgrid/" rel="alternate" type="text/html" title="Flexbox V.s. Cssgrid" /><published>2021-05-24T00:00:00+08:00</published> <updated>2021-05-25T17:48:17+08:00</updated> <id>https://zengyongxing.github.io/posts/flexbox-v.s.-cssgrid/</id> <content src="https://zengyongxing.github.io/posts/flexbox-v.s.-cssgrid/" /> <author> <name>zengyongxing</name> </author> <summary> 总结 Flexbox 对同一层次的元素做一维布局。 CSSgrid 将显示二维显示空间做网格分割，然后再作为CSS指定到特定元素上。 对于不支持的浏览器客户端，回退到display table是最好的方案。 CSS grid 指定容器使用grid来布局 .container { /* 在容器上 */ display: grid; /* 指定使用grid方式，做如下网格分割：*/ grid-template-columns: repeat(3, 1fr); /* 三列，每列都一样大 */ grid-template-rows: 100px 100px 100px; /* 三行，每行100pox高 */ } .item-1 { /* 指定容器中的的一个元素，附着在下面的网格上： */ grid-column: 1 / span 2;... </summary> </entry> <entry><title>How To Build This Site</title><link href="https://zengyongxing.github.io/posts/how-to-build-this-site/" rel="alternate" type="text/html" title="How To Build This Site" /><published>2021-05-23T00:00:00+08:00</published> <updated>2021-09-29T14:24:14+08:00</updated> <id>https://zengyongxing.github.io/posts/how-to-build-this-site/</id> <content src="https://zengyongxing.github.io/posts/how-to-build-this-site/" /> <author> <name>zengyongxing</name> </author> <summary> 开发运行环境 开发环境中： 使用jekyll new username.github.io 来创建工程 使用bundle install 来根据Gemfile安装gem库 使用jekyll serve 作为HTTP服务器来启动项目 工程可以引用gem库的模版，也可以直接将模版拷贝到对应的工程文件中 运行环境中： 通过Github Action，在每次代码提交之后，自动调用page_deploy.yaml 将_posts中的markdown文件转化为posts中的HTML文件，来发布。 通过http://username.github.io 来发布站点 详细步骤 详细步骤请参考 Jekyll 官网教程 , jekyll-theme-chirpy模版 和gitpa... </summary> </entry> <entry><title>Example</title><link href="https://zengyongxing.github.io/posts/example/" rel="alternate" type="text/html" title="Example" /><published>2021-05-22T00:00:00+08:00</published> <updated>2021-05-22T00:00:00+08:00</updated> <id>https://zengyongxing.github.io/posts/example/</id> <content src="https://zengyongxing.github.io/posts/example/" /> <author> <name>zengyongxing</name> </author> <summary> this is an example </summary> </entry> </feed>
